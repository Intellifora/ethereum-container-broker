#!/bin/bash

set -u
set -e
set -o pipefail

: ${broker_uri:?required}

info() {
  echo "$@ " >&2
}

create_instance() {
  local service_id=$1
  local plan_id=$2
  local instance_id=$3
  info creating service instance ${instance_id} for plan ${plan_id}
  curl -s ${broker_uri}/v2/service_instances/${instance_id} \
      -H 'Content-Type: application/json' \
      -X PUT \
      -d "{\"service_id\":\"${service_id}\",\"plan_id\":\"${plan_id}\",\"organization_guid\":\"x\",\"space_guid\":\"x\"}" \
      >&2 || {
    echo "Couldn't create service instance"
    exit 1
  }
}

create_binding() {
  local service_id=$1
  local plan_id=$2
  local instance_id=$3
  local binding_id=$4
  info creating binding ${binding_id} for instance ${instance_id}
  curl -sf ${broker_uri}/v2/service_instances/${instance_id}/service_bindings/${binding_id} \
    -H 'Content-Type: application/json' \
    -X PUT \
    -d "{\"service_id\": \"${service_id}\", \"plan_id\": \"${plan_id}\",\"organization_guid\":\"x\",\"space_guid\":\"x\"}" || {
    echo "Couldn't create instance binding"
    exit 1
  }
}

main() {
  local service_id=$1
  local plan_id=$2
  local instance_id=$3
  local binding_id=$4

  info $(create_instance $service_id $plan_id $instance_id | head -c80)
  credentials=$(create_binding $service_id $plan_id $instance_id $binding_id)

  uri=$(echo $credentials | jq -r ".credentials.uri")
  if [[ "${uri:-null}" == "null" ]]; then
    info "Binding credentials missing 'uri' key"
  fi

  # return credentials to caller
  echo $credentials
}

main $@
